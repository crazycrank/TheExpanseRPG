@using TheExpanseRPG.CharacterSheet.Domain.Base
@using TheExpanseRPG.CharacterSheet.Domain.Aggregates.CharacterAggregate.Persona
@using Microsoft.Extensions.Logging

<div class="row">
    <StyledTextboxControl Label="Name" Value="@Persona.Name" ValueChanged="@(args => { Persona.Name = args.Value as string; OnChanged(args); })" />
</div>
<div class="row">
    <StyledSelectControl Label="Origin" Selected="Persona.Origin" Options="@(Enumeration.GetAll<Origin>())" SelectedChanged="@(args => { Persona.Origin = args.Value as Origin; OnChanged(args);})" />
</div>
<div class="row">
    <StyledSelectControl Label="Background" Selected="Persona.Background" Options="@(Enumeration.GetAll<Background>())" SelectedChanged="@(args => { Persona.Background = args.Value as Background; OnChanged(args);})" />
</div>
<div class="row">
    <StyledSelectControl Label="Social Class" Selected="Persona.SocialClass" Options="@(Enumeration.GetAll<SocialClass>())" SelectedChanged="@(args => { Persona.SocialClass = args.Value as SocialClass; OnChanged(args);})" />
</div>
<div class="row">
    <StyledSelectControl Label="Profession" Selected="Persona.Profession" Options="@(Enumeration.GetAll<Profession>())" SelectedChanged="@(args => { Persona.Profession = args.Value as Profession; OnChanged(args);})" />
</div>
<div class="row">
    <StyledSelectControl Label="Drive" Selected="Persona.Drive" Options="@(Enumeration.GetAll<Drive>())" SelectedChanged="@(args => { Persona.Drive = args.Value as Drive; OnChanged(args);})" />
</div>
<div class="row">
    <StyledTextboxControl Label="Goals" Value="@Persona.Goals" ValueChanged="@(args => { Persona.Goals = args.Value as string; OnChanged(args); })" />
</div>

@code {
    [Inject]
    protected ILogger<PersonaComponent> Logger { get; set; }

    [Parameter]
    public Persona Persona { get; set; }

    [Parameter]
    public EventCallback<Persona> PersonaChanged { get; set; }

    private void OnChanged(ChangeEventArgs args)
    {
        Logger.LogDebug($"Received ChangedEventArgs '{args.Value}'");
        PersonaChanged.InvokeAsync(Persona);
    }

}
